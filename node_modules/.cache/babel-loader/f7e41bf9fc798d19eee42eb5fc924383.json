{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/views/website/Domains/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useGet } from \"restful-react\";\nimport Loading from \"components/Loading\";\nimport SearchBar from \"components/SearchBar\";\nimport { PictureCard as DomaineCard } from \"components/Cards\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport _ from \"lodash\";\nexport const List = props => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SearchBar, {\n  placeholder: \"Trouver une Domaine\",\n  onChange: props.setSearch,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  md: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, props.filtered.map(d => /*#__PURE__*/React.createElement(Col, {\n  key: d._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(DomaineCard, {\n  link: `/domains/${d._id}`,\n  image: `https://images.unsplash.com/photo-1464054313797-e27fb58e90a9?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=996&q=80`,\n  name: d.nameD,\n  description: d.description,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }\n}))))));\n\nconst Domains = () => {\n  const [search, setSearch] = useState(\"\");\n  const [filtered, setFiltered] = useState([]);\n  const {\n    data: domaines,\n    loading,\n    error,\n    refetch\n  } = useGet(`/domaines`);\n  useEffect(() => {\n    if (domaines) setFiltered(domaines.filter(d => _.includes(d.nameD + d.description, search)));\n  }, [domaines, search]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loading, {\n    centerScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Loading domaines...\"), error && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => refetch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Load Domaines\"), domaines && /*#__PURE__*/React.createElement(List, Object.assign({\n    filtered,\n    setSearch\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 20\n    }\n  })));\n};\n\nexport default Domains;","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/views/website/Domains/index.tsx"],"names":["React","useState","useEffect","useGet","Loading","SearchBar","PictureCard","DomaineCard","Container","Row","Col","Button","_","List","props","setSearch","filtered","map","d","_id","nameD","description","Domains","search","setFiltered","data","domaines","loading","error","refetch","filter","includes"],"mappings":";AAAA,OAAOA,KAAP,IAEEC,QAFF,EAGEC,SAHF,QAMO,OANP;AAOA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,SAASC,WAAW,IAAIC,WAAxB,QAA2C,kBAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,YAA5C;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,iBAIlB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,WAAW,EAAC,qBAAvB;AAA6C,EAAA,QAAQ,EAAEA,KAAK,CAACC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,eAIE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAK,EAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,CAAD,iBAClB,oBAAC,GAAD;AAAK,EAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AACE,EAAA,IAAI,EAAG,YAAWD,CAAC,CAACC,GAAI,EAD1B;AAEE,EAAA,KAAK,EAAG,wHAFV;AAGE,EAAA,IAAI,EAAED,CAAC,CAACE,KAHV;AAIE,EAAA,WAAW,EAAEF,CAAC,CAACG,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,CADH,CADF,CAJF,CAJK;;AAyBP,MAAMC,OAA0B,GAAG,MAAM;AACvC,QAAM,CAACC,MAAD,EAASR,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,QAAD,EAAWQ,WAAX,IAA0BvB,QAAQ,CAAW,EAAX,CAAxC;AACA,QAAM;AAAEwB,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAA8C1B,MAAM,CACvD,WADuD,CAA1D;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,QAAJ,EACEF,WAAW,CACTE,QAAQ,CAACI,MAAT,CAAiBZ,CAAD,IAAON,CAAC,CAACmB,QAAF,CAAWb,CAAC,CAACE,KAAF,GAAUF,CAAC,CAACG,WAAvB,EAAoCE,MAApC,CAAvB,CADS,CAAX;AAGH,GALQ,EAKN,CAACG,QAAD,EAAWH,MAAX,CALM,CAAT;AAOA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,iBAAI,oBAAC,OAAD;AAAS,IAAA,YAAY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADd,EAEGC,KAAK,iBAAI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFZ,EAGGH,QAAQ,iBAAI,oBAAC,IAAD,gBAAU;AAAEV,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHf,CADF;AAOD,CArBD;;AAuBA,eAAeO,OAAf","sourcesContent":["import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  useEffect,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport { useGet } from \"restful-react\";\r\nimport Loading from \"components/Loading\";\r\nimport SearchBar from \"components/SearchBar\";\r\n\r\nimport { PictureCard as DomaineCard } from \"components/Cards\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { Domain } from \"models/database\";\r\nimport _ from \"lodash\";\r\n\r\nexport const List = (props: {\r\n  filtered: Domain[];\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n}) => (\r\n  <React.Fragment>\r\n    <Container className='container'>\r\n      <SearchBar placeholder='Trouver une Domaine' onChange={props.setSearch} />\r\n    </Container>\r\n    <Container className='container'>\r\n      <Row md={3}>\r\n        {props.filtered.map((d) => (\r\n          <Col key={d._id}>\r\n            <DomaineCard\r\n              link={`/domains/${d._id}`}\r\n              image={`https://images.unsplash.com/photo-1464054313797-e27fb58e90a9?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=996&q=80`}\r\n              name={d.nameD}\r\n              description={d.description}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nconst Domains: FunctionComponent = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState<Domain[]>([]);\r\n  const { data: domaines, loading, error, refetch } = useGet<Domain[]>(\r\n    `/domaines`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (domaines)\r\n      setFiltered(\r\n        domaines.filter((d) => _.includes(d.nameD + d.description, search))\r\n      );\r\n  }, [domaines, search]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading centerScreen>Loading domaines...</Loading>}\r\n      {error && <Button onClick={() => refetch()}>Load Domaines</Button>}\r\n      {domaines && <List {...{ filtered, setSearch }} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Domains;\r\n"]},"metadata":{},"sourceType":"module"}