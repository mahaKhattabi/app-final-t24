{"ast":null,"code":"import { LitElement, html, css } from \"lit-element\";\n\nclass FaIcon extends LitElement {\n  static get properties() {\n    return {\n      color: String,\n      iClass: {\n        attribute: \"class\"\n      },\n      src: String,\n      style: String,\n      size: String,\n      pathPrefix: {\n        attribute: \"path-prefix\"\n      }\n    };\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: inline-block;\n        padding: 0;\n        margin: 0;\n      }\n      :host svg {\n        fill: var(--fa-icon-fill-color, currentcolor);\n        width: var(--fa-icon-width, 19px);\n        height: var(--fa-icon-height, 19px);\n      }\n    `;\n  }\n\n  getSources(className) {\n    const PREFIX_TO_STYLE = {\n      fas: \"solid\",\n      far: \"regular\",\n      fal: \"light\",\n      fab: \"brands\",\n      fa: \"solid\"\n    };\n\n    const getPrefix = iClass => {\n      let data = iClass.split(\" \");\n      return [PREFIX_TO_STYLE[data[0]], normalizeIconName(data[1])];\n    };\n\n    const normalizeIconName = name => {\n      let icon = name.replace(\"fa-\", \"\");\n      return icon;\n    };\n\n    let data = getPrefix(className);\n    return `${this.pathPrefix}/@fortawesome/fontawesome-free/sprites/${data[0]}.svg#${data[1]}`;\n  }\n\n  constructor() {\n    super();\n    this.iClass = \"\";\n    this.src = \"\";\n    this.style = \"\";\n    this.size = \"\";\n    this.color = \"\";\n    this.pathPrefix = \"node_modules\";\n  }\n\n  firstUpdated() {\n    this.src = this.getSources(this.iClass);\n  }\n\n  _parseStyles() {\n    return `\n      ${this.size ? `width: ${this.size};` : ''}\n      ${this.size ? `height: ${this.size};` : ''}\n      ${this.color ? `fill: ${this.color};` : ''}\n      ${this.style}\n    `;\n  }\n\n  render() {\n    return html`\n      <svg \n        .style=\"${this._parseStyles()}\">\n        <use \n          href=\"${this.src}\">\n        </use>\n      </svg>\n    `;\n  }\n\n}\n\ncustomElements.define(\"fa-icon\", FaIcon);","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/node_modules/fa-icons/fa-icon.js"],"names":["LitElement","html","css","FaIcon","properties","color","String","iClass","attribute","src","style","size","pathPrefix","styles","getSources","className","PREFIX_TO_STYLE","fas","far","fal","fab","fa","getPrefix","data","split","normalizeIconName","name","icon","replace","constructor","firstUpdated","_parseStyles","render","customElements","define"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,aAAtC;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9B,aAAWI,UAAX,GAAwB;AACtB,WAAO;AACLC,MAAAA,KAAK,EAAEC,MADF;AAELC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFH;AAGLC,MAAAA,GAAG,EAAEH,MAHA;AAILI,MAAAA,KAAK,EAAEJ,MAJF;AAKLK,MAAAA,IAAI,EAAEL,MALD;AAMLM,MAAAA,UAAU,EAAE;AAAEJ,QAAAA,SAAS,EAAE;AAAb;AANP,KAAP;AAQD;;AACD,aAAWK,MAAX,GAAoB;AAClB,WAAOX,GAAI;;;;;;;;;;;KAAX;AAYD;;AAEDY,EAAAA,UAAU,CAACC,SAAD,EAAY;AACpB,UAAMC,eAAe,GAAG;AACtBC,MAAAA,GAAG,EAAE,OADiB;AAEtBC,MAAAA,GAAG,EAAE,SAFiB;AAGtBC,MAAAA,GAAG,EAAE,OAHiB;AAItBC,MAAAA,GAAG,EAAE,QAJiB;AAKtBC,MAAAA,EAAE,EAAE;AALkB,KAAxB;;AAOA,UAAMC,SAAS,GAAGf,MAAM,IAAI;AAC1B,UAAIgB,IAAI,GAAGhB,MAAM,CAACiB,KAAP,CAAa,GAAb,CAAX;AACA,aAAO,CAACR,eAAe,CAACO,IAAI,CAAC,CAAD,CAAL,CAAhB,EAA2BE,iBAAiB,CAACF,IAAI,CAAC,CAAD,CAAL,CAA5C,CAAP;AACD,KAHD;;AAIA,UAAME,iBAAiB,GAAGC,IAAI,IAAI;AAChC,UAAIC,IAAI,GAAGD,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAX;AACA,aAAOD,IAAP;AACD,KAHD;;AAIA,QAAIJ,IAAI,GAAGD,SAAS,CAACP,SAAD,CAApB;AACA,WAAQ,GAAE,KAAKH,UAAW,0CAAyCW,IAAI,CAAC,CAAD,CAAI,QAAOA,IAAI,CAAC,CAAD,CAAI,EAA1F;AACD;;AACDM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKtB,MAAL,GAAc,EAAd;AACA,SAAKE,GAAL,GAAW,EAAX;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKN,KAAL,GAAa,EAAb;AACA,SAAKO,UAAL,GAAkB,cAAlB;AACD;;AACDkB,EAAAA,YAAY,GAAG;AACb,SAAKrB,GAAL,GAAW,KAAKK,UAAL,CAAgB,KAAKP,MAArB,CAAX;AACD;;AACDwB,EAAAA,YAAY,GAAG;AACb,WAAQ;QACJ,KAAKpB,IAAL,GAAa,UAAS,KAAKA,IAAK,GAAhC,GAAqC,EAAG;QACxC,KAAKA,IAAL,GAAa,WAAU,KAAKA,IAAK,GAAjC,GAAsC,EAAG;QACzC,KAAKN,KAAL,GAAc,SAAQ,KAAKA,KAAM,GAAjC,GAAsC,EAAG;QACzC,KAAKK,KAAM;KAJf;AAMD;;AACDsB,EAAAA,MAAM,GAAG;AACP,WAAO/B,IAAK;;kBAEE,KAAK8B,YAAL,EAAoB;;kBAEpB,KAAKtB,GAAI;;;KAJvB;AAQD;;AA1E6B;;AA4EhCwB,cAAc,CAACC,MAAf,CAAsB,SAAtB,EAAiC/B,MAAjC","sourcesContent":["import { LitElement, html, css } from \"lit-element\";\r\n\r\nclass FaIcon extends LitElement {\r\n  static get properties() {\r\n    return {\r\n      color: String,\r\n      iClass: { attribute: \"class\" },\r\n      src: String,\r\n      style: String,\r\n      size: String,\r\n      pathPrefix: { attribute: \"path-prefix\" }\r\n    };\r\n  }\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        display: inline-block;\r\n        padding: 0;\r\n        margin: 0;\r\n      }\r\n      :host svg {\r\n        fill: var(--fa-icon-fill-color, currentcolor);\r\n        width: var(--fa-icon-width, 19px);\r\n        height: var(--fa-icon-height, 19px);\r\n      }\r\n    `;\r\n  }\r\n\r\n  getSources(className) {\r\n    const PREFIX_TO_STYLE = {\r\n      fas: \"solid\",\r\n      far: \"regular\",\r\n      fal: \"light\",\r\n      fab: \"brands\",\r\n      fa: \"solid\"\r\n    };\r\n    const getPrefix = iClass => {\r\n      let data = iClass.split(\" \");\r\n      return [PREFIX_TO_STYLE[data[0]], normalizeIconName(data[1])];\r\n    };\r\n    const normalizeIconName = name => {\r\n      let icon = name.replace(\"fa-\", \"\");\r\n      return icon;\r\n    };\r\n    let data = getPrefix(className);\r\n    return `${this.pathPrefix}/@fortawesome/fontawesome-free/sprites/${data[0]}.svg#${data[1]}`;\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.iClass = \"\";\r\n    this.src = \"\";\r\n    this.style = \"\";\r\n    this.size = \"\";\r\n    this.color = \"\";\r\n    this.pathPrefix = \"node_modules\";\r\n  }\r\n  firstUpdated() {\r\n    this.src = this.getSources(this.iClass);\r\n  }\r\n  _parseStyles() {\r\n    return `\r\n      ${this.size ? `width: ${this.size};` : ''}\r\n      ${this.size ? `height: ${this.size};` : ''}\r\n      ${this.color ? `fill: ${this.color};` : ''}\r\n      ${this.style}\r\n    `;\r\n  }\r\n  render() {\r\n    return html`\r\n      <svg \r\n        .style=\"${this._parseStyles()}\">\r\n        <use \r\n          href=\"${this.src}\">\r\n        </use>\r\n      </svg>\r\n    `;\r\n  }\r\n}\r\ncustomElements.define(\"fa-icon\", FaIcon);\r\n"]},"metadata":{},"sourceType":"module"}