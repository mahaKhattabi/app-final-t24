{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/components/SortedTable.tsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    margin: `${theme.spacing(2)}px 0px`\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function SortedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"desc\");\n  const [key, setKey] = useState();\n\n  const toggleOrder = k => {\n    if (key === k) {\n      setOrder(order === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setKey(k);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, props.thead.map(h => /*#__PURE__*/React.createElement(TableCell, {\n    key: h.name // align={headCell.numeric ? 'right' : 'left'}\n    // padding={headCell.disablePadding ? 'none' : 'default'}\n    ,\n    sortDirection: key === h.key ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: h.sorted && key === h.key,\n    direction: key === h.key ? order : \"asc\",\n    onClick: () => toggleOrder(h.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, h.name), key === h.key ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, props.sort(props.data, order, key).map((row, index) => props.tbody(row, index))))));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/components/SortedTable.tsx"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","Paper","useStyles","theme","root","width","paper","margin","spacing","table","minWidth","visuallyHidden","border","clip","height","overflow","padding","position","top","SortedTable","props","classes","order","setOrder","key","setKey","toggleOrder","k","thead","map","h","name","sorted","sort","data","row","index","tbody"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    margin: `${theme.spacing(2)}px 0px`,\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\ntype Order = \"desc\" | \"asc\";\r\n\r\ninterface SortedTableProps<T> {\r\n  data: T[];\r\n  thead: { name: string; sorted?: boolean; key?: string }[];\r\n  tbody: (e: T, key: any) => JSX.Element;\r\n  sort: (collection: T[], order: Order, key?: string) => T[];\r\n}\r\n\r\nexport default function SortedTable<T>(props: SortedTableProps<T>) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState<Order>(\"desc\");\r\n  const [key, setKey] = useState<string>();\r\n\r\n  const toggleOrder = (k?: string) => {\r\n    if (key === k) {\r\n      setOrder(order === \"asc\" ? \"desc\" : \"asc\");\r\n    } else {\r\n      setKey(k);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <TableContainer>\r\n        <Table\r\n          className={classes.table}\r\n          aria-labelledby='tableTitle'\r\n          size={\"medium\"}\r\n          aria-label='enhanced table'\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.thead.map((h) => (\r\n                <TableCell\r\n                  key={h.name}\r\n                  // align={headCell.numeric ? 'right' : 'left'}\r\n                  // padding={headCell.disablePadding ? 'none' : 'default'}\r\n                  sortDirection={key === h.key ? order : false}\r\n                >\r\n                  <TableSortLabel\r\n                    active={h.sorted && key === h.key}\r\n                    direction={key === h.key ? order : \"asc\"}\r\n                    onClick={() => toggleOrder(h.key)}\r\n                  >\r\n                    <b>{h.name}</b>\r\n                    {key === h.key ? (\r\n                      <span className={classes.visuallyHidden}>\r\n                        {order === \"desc\"\r\n                          ? \"sorted descending\"\r\n                          : \"sorted ascending\"}\r\n                      </span>\r\n                    ) : null}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props\r\n              .sort(props.data, order, key)\r\n              .map((row, index) => props.tbody(row, index))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}