{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/views/admin/relations/processes.tsx\";\nimport React, { useState } from \"react\";\nimport { Card, DropdownItem, Table, Button } from \"reactstrap\";\nimport Autocomplete from \"components/Autocomplete\";\nimport _ from \"lodash\";\nimport { useMutate } from \"restful-react\";\nexport default function Processes(props) {\n  const [processes, setProcesses] = useState(props.collection);\n  const {\n    mutate: add\n  } = useMutate({\n    path: props.api.add,\n    verb: \"PATCH\"\n  });\n  const {\n    mutate: remove\n  } = useMutate({\n    path: props.api.remove,\n    verb: \"PATCH\"\n  });\n\n  const relate = p => {\n    add({\n      processus: p._id\n    }).then(() => setProcesses([...processes, p]));\n  };\n\n  const unrelate = p => {\n    remove({\n      processus: p._id\n    }).then(() => setProcesses(processes.filter(pr => pr !== p)));\n  };\n\n  const filter = (p, s) => _.includes(p.nameP, s) && !_.includes(processes.map(e => e._id), p._id);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"content-card margin-top-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    url: s => `/processus`,\n    option: e => /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => relate(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, e.nameP),\n    optionFilter: filter,\n    maxItems: 10,\n    placeholder: \"Link processus by name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, processes.map((p, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, p.nameP), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, _.take(p.description, 100)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: () => unrelate(p),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Unrelate\")))))));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/views/admin/relations/processes.tsx"],"names":["React","useState","Card","DropdownItem","Table","Button","Autocomplete","_","useMutate","Processes","props","processes","setProcesses","collection","mutate","add","path","api","verb","remove","relate","p","processus","_id","then","unrelate","filter","pr","s","includes","nameP","map","e","key","take","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,MAApC,QAAkD,YAAlD;AAEA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,eAA1B;AAUA,eAAe,SAASC,SAAT,CAAsBC,KAAtB,EAAuD;AACpE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACS,KAAK,CAACG,UAAP,CAA1C;AAEA,QAAM;AAAEC,IAAAA,MAAM,EAAEC;AAAV,MAAkBP,SAAS,CAAC;AAChCQ,IAAAA,IAAI,EAAEN,KAAK,CAACO,GAAN,CAAUF,GADgB;AAEhCG,IAAAA,IAAI,EAAE;AAF0B,GAAD,CAAjC;AAKA,QAAM;AAAEJ,IAAAA,MAAM,EAAEK;AAAV,MAAqBX,SAAS,CAAC;AACnCQ,IAAAA,IAAI,EAAEN,KAAK,CAACO,GAAN,CAAUE,MADmB;AAEnCD,IAAAA,IAAI,EAAE;AAF6B,GAAD,CAApC;;AAKA,QAAME,MAAM,GAAIC,CAAD,IAAgB;AAC7BN,IAAAA,GAAG,CAAC;AAAEO,MAAAA,SAAS,EAAED,CAAC,CAACE;AAAf,KAAD,CAAH,CAA0BC,IAA1B,CAA+B,MAAMZ,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeU,CAAf,CAAD,CAAjD;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAIJ,CAAD,IAAgB;AAC/BF,IAAAA,MAAM,CAAC;AAAEG,MAAAA,SAAS,EAAED,CAAC,CAACE;AAAf,KAAD,CAAN,CAA6BC,IAA7B,CAAkC,MAChCZ,YAAY,CAACD,SAAS,CAACe,MAAV,CAAkBC,EAAD,IAAQA,EAAE,KAAKN,CAAhC,CAAD,CADd;AAGD,GAJD;;AAMA,QAAMK,MAAM,GAAG,CAACL,CAAD,EAAaO,CAAb,KACbrB,CAAC,CAACsB,QAAF,CAAWR,CAAC,CAACS,KAAb,EAAoBF,CAApB,KACA,CAACrB,CAAC,CAACsB,QAAF,CACClB,SAAS,CAACoB,GAAV,CAAeC,CAAD,IAAOA,CAAC,CAACT,GAAvB,CADD,EAECF,CAAC,CAACE,GAFH,CAFH;;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGK,CAAD,IAAQ,YADf;AAEE,IAAA,MAAM,EAAGI,CAAD,iBACN,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAMZ,MAAM,CAACY,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCA,CAAC,CAACF,KAA3C,CAHJ;AAKE,IAAA,YAAY,EAAEJ,MALhB;AAME,IAAA,QAAQ,EAAE,EANZ;AAOE,IAAA,WAAW,EAAC,wBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,SAAS,CAACoB,GAAV,CAAc,CAACV,CAAD,EAAIY,GAAJ,kBACb;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,CAAC,CAACS,KAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKvB,CAAC,CAAC2B,IAAF,CAAOb,CAAC,CAACc,WAAT,EAAsB,GAAtB,CAAL,CAFF,eAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAACJ,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAHF,CADD,CADH,CARF,CAXF,CADF;AAoCD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Card, DropdownItem, Table, Button } from \"reactstrap\";\r\nimport { Process } from \"models/database\";\r\nimport Autocomplete from \"components/Autocomplete\";\r\nimport _ from \"lodash\";\r\nimport { useMutate } from \"restful-react\";\r\n\r\ninterface ProcessRelationsProps<T> {\r\n  collection: Process[];\r\n  api: {\r\n    add: string;\r\n    remove: string;\r\n  };\r\n}\r\n\r\nexport default function Processes<T>(props: ProcessRelationsProps<T>) {\r\n  const [processes, setProcesses] = useState(props.collection);\r\n\r\n  const { mutate: add } = useMutate({\r\n    path: props.api.add,\r\n    verb: \"PATCH\",\r\n  });\r\n\r\n  const { mutate: remove } = useMutate({\r\n    path: props.api.remove,\r\n    verb: \"PATCH\",\r\n  });\r\n\r\n  const relate = (p: Process) => {\r\n    add({ processus: p._id }).then(() => setProcesses([...processes, p]));\r\n  };\r\n\r\n  const unrelate = (p: Process) => {\r\n    remove({ processus: p._id }).then(() =>\r\n      setProcesses(processes.filter((pr) => pr !== p))\r\n    );\r\n  };\r\n\r\n  const filter = (p: Process, s: string) =>\r\n    _.includes(p.nameP, s) &&\r\n    !_.includes(\r\n      processes.map((e) => e._id),\r\n      p._id\r\n    );\r\n\r\n  return (\r\n    <Card className='content-card margin-top-30'>\r\n      <Autocomplete<Process, Process>\r\n        url={(s) => `/processus`}\r\n        option={(e) => (\r\n          <DropdownItem onClick={() => relate(e)}>{e.nameP}</DropdownItem>\r\n        )}\r\n        optionFilter={filter}\r\n        maxItems={10}\r\n        placeholder='Link processus by name'\r\n      />\r\n      <br />\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {processes.map((p, key) => (\r\n            <tr key={key}>\r\n              <td>{p.nameP}</td>\r\n              <td>{_.take(p.description, 100)}</td>\r\n              <td className='text-right'>\r\n                <Button outline onClick={() => unrelate(p)}>\r\n                  Unrelate\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}