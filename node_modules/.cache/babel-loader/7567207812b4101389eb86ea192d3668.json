{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/views/website/Tables/show.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useGet } from \"restful-react\";\nimport _ from \"lodash\";\nimport Loading from \"components/Loading\";\nimport Heading from \"components/Heading\";\nimport { List as ListDomains } from \"../Domains/index\";\nimport { List as ListProcesses } from \"../Processes/index\";\nimport { useParams } from \"react-router-dom\";\nimport { ButtonGroup, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nexport default function Show() {\n  const {\n    id\n  } = useParams();\n  const {\n    data: table,\n    loading\n  } = useGet(`/tables/${id}`);\n  const [filterDom, setFilterDom] = useState([]);\n  const [filterProc, setFilterProc] = useState([]);\n  const [searchDom, setSearchDom] = useState(\"\");\n  const [searchProc, setSearchProc] = useState(\"\");\n  const [showTab, setShowTab] = useState(1);\n  useEffect(() => {\n    if (table) setFilterDom(table.domaines.filter(d => _.includes(d.nameD + d.description, searchDom)));\n  }, [table, searchDom]);\n  useEffect(() => {\n    if (table) setFilterProc(table.processus.filter(p => _.includes(p.nameP + p.description, searchProc)));\n  }, [table, searchProc]);\n\n  const ButtonNav = props => /*#__PURE__*/React.createElement(Button, {\n    className: showTab === props.nav ? \"nav-active\" : \"nav-blank\",\n    onClick: () => setShowTab(props.nav),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, props.children);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loading, {\n    centerScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, \"Loading table...\"), table && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    header: table.nameT,\n    content: \"Tables\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, table.description, \" \", /*#__PURE__*/React.createElement(Link, {\n      to: `/tables/${table.nameT}/versions`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"versions\")),\n    component: /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonNav, {\n      nav: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Domaines\"), /*#__PURE__*/React.createElement(ButtonNav, {\n      nav: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Processus\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), showTab === 1 && /*#__PURE__*/React.createElement(ListDomains, {\n    filtered: filterDom,\n    setSearch: setSearchDom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), showTab === 2 && /*#__PURE__*/React.createElement(ListProcesses, {\n    filtered: filterProc,\n    setSearch: setSearchProc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/views/website/Tables/show.tsx"],"names":["React","useState","useEffect","useGet","_","Loading","Heading","List","ListDomains","ListProcesses","useParams","ButtonGroup","Button","Link","Show","id","data","table","loading","filterDom","setFilterDom","filterProc","setFilterProc","searchDom","setSearchDom","searchProc","setSearchProc","showTab","setShowTab","domaines","filter","d","includes","nameD","description","processus","p","nameP","ButtonNav","props","nav","children","nameT"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FunctionComponent } from \"react\";\r\nimport { useGet } from \"restful-react\";\r\nimport { Process, Table, Domain } from \"models/database\";\r\nimport _ from \"lodash\";\r\nimport Loading from \"components/Loading\";\r\nimport Heading from \"components/Heading\";\r\n\r\nimport { List as ListDomains } from \"../Domains/index\";\r\nimport { List as ListProcesses } from \"../Processes/index\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ButtonGroup, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ndeclare var process: {\r\n  env: {\r\n    REACT_APP_HOST_PYTHON: string;\r\n  };\r\n};\r\n\r\nexport default function Show() {\r\n  const { id } = useParams();\r\n  const { data: table, loading } = useGet<Table>(`/tables/${id}`);\r\n\r\n  const [filterDom, setFilterDom] = useState<Domain[]>([]);\r\n  const [filterProc, setFilterProc] = useState<Process[]>([]);\r\n\r\n  const [searchDom, setSearchDom] = useState(\"\");\r\n  const [searchProc, setSearchProc] = useState(\"\");\r\n\r\n  const [showTab, setShowTab] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (table)\r\n      setFilterDom(\r\n        table.domaines.filter((d) =>\r\n          _.includes(d.nameD + d.description, searchDom)\r\n        )\r\n      );\r\n  }, [table, searchDom]);\r\n\r\n  useEffect(() => {\r\n    if (table)\r\n      setFilterProc(\r\n        table.processus.filter((p) =>\r\n          _.includes(p.nameP + p.description, searchProc)\r\n        )\r\n      );\r\n  }, [table, searchProc]);\r\n\r\n  const ButtonNav: FunctionComponent<{ nav: number }> = (props) => (\r\n    <Button\r\n      className={showTab === props.nav ? \"nav-active\" : \"nav-blank\"}\r\n      onClick={() => setShowTab(props.nav)}\r\n    >\r\n      {props.children}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading centerScreen>Loading table...</Loading>}\r\n      {table && (\r\n        <React.Fragment>\r\n          <Heading\r\n            header={table.nameT}\r\n            content='Tables'\r\n            description={\r\n              <>\r\n                {table.description}{\" \"}\r\n                <Link to={`/tables/${table.nameT}/versions`}>versions</Link>\r\n              </>\r\n            }\r\n            component={\r\n              <ButtonGroup size='sm'>\r\n                <ButtonNav nav={1}>Domaines</ButtonNav>\r\n                <ButtonNav nav={2}>Processus</ButtonNav>\r\n              </ButtonGroup>\r\n            }\r\n          />\r\n          {showTab === 1 && (\r\n            <ListDomains filtered={filterDom} setSearch={setSearchDom} />\r\n          )}\r\n          {showTab === 2 && (\r\n            <ListProcesses filtered={filterProc} setSearch={setSearchProc} />\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}