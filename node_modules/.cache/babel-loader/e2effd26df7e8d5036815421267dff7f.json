{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/views/website/Processes/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useGet } from \"restful-react\";\nimport Loading from \"components/Loading\";\nimport { PictureCard as ProcessCard } from \"components/Cards\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport _ from \"lodash\";\nimport SearchBar from \"components/SearchBar\";\nexport const List = props => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SearchBar, {\n  placeholder: \"Trouver une Processus\",\n  onChange: props.setSearch,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  md: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}, props.filtered.map(d => /*#__PURE__*/React.createElement(Col, {\n  key: d._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(ProcessCard, {\n  link: `/processes/${d._id}`,\n  image: \"https://images.unsplash.com/photo-1422393462206-207b0fbd8d6b?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80\",\n  name: d.nameP,\n  description: d.description,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }\n}))))));\n\nconst Processes = () => {\n  const [search, setSearch] = useState(\"\");\n  const [filtered, setFiltered] = useState([]);\n  const {\n    data: processes,\n    loading,\n    error,\n    refetch\n  } = useGet(`/processus`);\n  useEffect(() => {\n    if (processes) setFiltered(processes.filter(p => _.includes(p.nameP + p.description, search)));\n  }, [processes, search]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loading, {\n    centerScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Loading processus...\"), error && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => refetch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Load Processus\"), processes && /*#__PURE__*/React.createElement(List, Object.assign({\n    filtered,\n    setSearch\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Processes;","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/views/website/Processes/index.tsx"],"names":["React","useState","useEffect","useGet","Loading","PictureCard","ProcessCard","Container","Row","Col","Button","_","SearchBar","List","props","setSearch","filtered","map","d","_id","nameP","description","Processes","search","setFiltered","data","processes","loading","error","refetch","filter","p","includes"],"mappings":";AAAA,OAAOA,KAAP,IAEEC,QAFF,EAGEC,SAHF,QAMO,OANP;AAOA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,WAAW,IAAIC,WAAxB,QAA2C,kBAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,YAA5C;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,iBAIlB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AACE,EAAA,WAAW,EAAC,uBADd;AAEE,EAAA,QAAQ,EAAEA,KAAK,CAACC,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,eAOE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAK,EAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,CAAD,iBAClB,oBAAC,GAAD;AAAK,EAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AACE,EAAA,IAAI,EAAG,cAAaD,CAAC,CAACC,GAAI,EAD5B;AAEE,EAAA,KAAK,EACH,yHAHJ;AAKE,EAAA,IAAI,EAAED,CAAC,CAACE,KALV;AAME,EAAA,WAAW,EAAEF,CAAC,CAACG,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,CADH,CADF,CAPF,CAJK;;AA8BP,MAAMC,SAA4B,GAAG,MAAM;AACzC,QAAM,CAACC,MAAD,EAASR,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,QAAD,EAAWQ,WAAX,IAA0BvB,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM;AAAEwB,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA;AAAnC,MAA+C1B,MAAM,CACxD,YADwD,CAA3D;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,SAAJ,EACEF,WAAW,CACTE,SAAS,CAACI,MAAV,CAAkBC,CAAD,IAAOpB,CAAC,CAACqB,QAAF,CAAWD,CAAC,CAACX,KAAF,GAAUW,CAAC,CAACV,WAAvB,EAAoCE,MAApC,CAAxB,CADS,CAAX;AAGH,GALQ,EAKN,CAACG,SAAD,EAAYH,MAAZ,CALM,CAAT;AAOA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,iBAAI,oBAAC,OAAD;AAAS,IAAA,YAAY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADd,EAEGC,KAAK,iBAAI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFZ,EAGGH,SAAS,iBAAI,oBAAC,IAAD,gBAAU;AAAEV,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHhB,CADF;AAOD,CArBD;;AAuBA,eAAeO,SAAf","sourcesContent":["import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  useEffect,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport { useGet } from \"restful-react\";\r\nimport Loading from \"components/Loading\";\r\n\r\nimport { PictureCard as ProcessCard } from \"components/Cards\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { Process } from \"models/database\";\r\nimport _ from \"lodash\";\r\n\r\nimport SearchBar from \"components/SearchBar\";\r\n\r\nexport const List = (props: {\r\n  filtered: Process[];\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n}) => (\r\n  <React.Fragment>\r\n    <Container className='container'>\r\n      <SearchBar\r\n        placeholder='Trouver une Processus'\r\n        onChange={props.setSearch}\r\n      />\r\n    </Container>\r\n    <Container className='container'>\r\n      <Row md={3}>\r\n        {props.filtered.map((d) => (\r\n          <Col key={d._id}>\r\n            <ProcessCard\r\n              link={`/processes/${d._id}`}\r\n              image={\r\n                \"https://images.unsplash.com/photo-1422393462206-207b0fbd8d6b?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80\"\r\n              }\r\n              name={d.nameP}\r\n              description={d.description}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nconst Processes: FunctionComponent = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState<Process[]>([]);\r\n  const { data: processes, loading, error, refetch } = useGet<Process[]>(\r\n    `/processus`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (processes)\r\n      setFiltered(\r\n        processes.filter((p) => _.includes(p.nameP + p.description, search))\r\n      );\r\n  }, [processes, search]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading centerScreen>Loading processus...</Loading>}\r\n      {error && <Button onClick={() => refetch()}>Load Processus</Button>}\r\n      {processes && <List {...{ filtered, setSearch }} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Processes;\r\n"]},"metadata":{},"sourceType":"module"}