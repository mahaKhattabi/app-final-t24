{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/aatf-views-very-last/src/views/website/Tables/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useGet } from \"restful-react\";\nimport Loading from \"components/Loading\";\nimport { PictureCard as TableCard } from \"components/Cards\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport _ from \"lodash\";\nimport SearchBar from \"components/SearchBar\";\nexport const List = props => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SearchBar, {\n  placeholder: \"Trouver une Table\",\n  onChange: props.setSearch,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Container, {\n  className: \"container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  md: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, props.filtered.map(t => /*#__PURE__*/React.createElement(Col, {\n  key: t._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TableCard, {\n  link: `/tables/${t._id}`,\n  name: t.nameT,\n  description: t.description,\n  image: \"https://images.unsplash.com/photo-1458668383970-8ddd3927deed?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1004&q=80\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }\n}))))));\n\nconst Tables = () => {\n  const [search, setSearch] = useState(\"\");\n  const [filtered, setFiltered] = useState([]);\n  const {\n    data: tables,\n    loading,\n    error,\n    refetch\n  } = useGet(`/tables`);\n  useEffect(() => {\n    if (tables) setFiltered(tables.filter(t => _.includes(t.nameT + t.description, search)));\n    console.log(tables);\n  }, [tables, search]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Loading, {\n    centerScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, \"Loading processus...\"), error && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => refetch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Load Processus\"), tables && /*#__PURE__*/React.createElement(List, Object.assign({\n    filtered,\n    setSearch\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }\n  })));\n};\n\nexport default Tables;","map":{"version":3,"sources":["/Users/mac/Desktop/aatf-views-very-last/src/views/website/Tables/index.tsx"],"names":["React","useState","useEffect","useGet","Loading","PictureCard","TableCard","Container","Row","Col","Button","_","SearchBar","List","props","setSearch","filtered","map","t","_id","nameT","description","Tables","search","setFiltered","data","tables","loading","error","refetch","filter","includes","console","log"],"mappings":"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","sourcesContent":["import React, {\r\n  FunctionComponent,\r\n  useState,\r\n  useEffect,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport { useGet } from \"restful-react\";\r\nimport Loading from \"components/Loading\";\r\n\r\nimport { PictureCard as TableCard } from \"components/Cards\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { Table } from \"models/database\";\r\nimport _ from \"lodash\";\r\nimport SearchBar from \"components/SearchBar\";\r\n\r\nexport const List = (props: {\r\n  filtered: Table[];\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n}) => (\r\n  <React.Fragment>\r\n    <Container className='container'>\r\n      <SearchBar placeholder='Trouver une Table' onChange={props.setSearch} />\r\n    </Container>\r\n    <Container className='container'>\r\n      <Row md={3}>\r\n        {props.filtered.map((t) => (\r\n          <Col key={t._id}>\r\n            <TableCard\r\n              link={`/tables/${t._id}`}\r\n              name={t.nameT}\r\n              description={t.description}\r\n              image={\r\n                \"https://images.unsplash.com/photo-1458668383970-8ddd3927deed?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1004&q=80\"\r\n              }\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nconst Tables: FunctionComponent = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState<Table[]>([]);\r\n  const { data: tables, loading, error, refetch } = useGet<Table[]>(`/tables`);\r\n\r\n  useEffect(() => {\r\n    if (tables)\r\n      setFiltered(\r\n        tables.filter((t) => _.includes(t.nameT + t.description, search))\r\n      );\r\n    console.log(tables);\r\n  }, [tables, search]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loading centerScreen>Loading processus...</Loading>}\r\n      {error && <Button onClick={() => refetch()}>Load Processus</Button>}\r\n      {tables && <List {...{ filtered, setSearch }} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}